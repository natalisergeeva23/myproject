@{
    Layout = null;
}


<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Финансы</title>
    <link rel="stylesheet" href="~/css/header_footer.css">
    <link rel="stylesheet" href="~/css/finance_style.css">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">

</head>


<body>
    <header class="container">
        <div class="row align-items-center">
            <div class="col">
                <div class="logo">
                    <h1>MINIGIGS</h1>
                </div>
            </div>
            <div class="col">
                <nav class="main-nav">
                    <ul>
                        <li><a asp-controller="Home" asp-action="TaskSearch">Поиск задач</a></li>
                        <li><a asp-controller="Home" asp-action="MyWork">Мои работы</a></li>
                        <li><a asp-controller="Home" asp-action="FinanceExecutor">Финансы</a></li>
                    </ul>
                </nav>
            </div>
            <div class="col">
                <div class="user-cabinet">
                    <a href="javascript:void(0);" class="user-cabinet-link">Личный кабинет</a>
                </div>
            </div>
            <div class="col">
                <div class="user-profile">
                    <img src="~/sourse/add_order_img/account_acons.png" alt="img_account_header">
                    <p id="username">Имя пользователя</p> <!-- Добавлен id для элемента -->
                </div>
            </div>
        </div>
    </header>

    <section class="section-financeex">
        <form id="form1" runat="server">
            <div class="container mt-5">
                <h1>Финансы</h1>
                <div class="balance-section">
                    <p class="balance-info">Баланс: 0 руб</p>
                    <div class="buttons">
                        <a asp-controller="Home" asp-action="WithdrawMoneyExecuter">
                            <input class="action-button" value="Вывести" />
                        </a>
                    </div>
                </div>
                <div class="operation-history-section">
                    <h2>История операций</h2>
                    <p class="operation-info">
                        Показаны операции за период с
                        <div class="filters d-flex">
                            <input type="date" id="startDateInput" class="filter-input form-control" placeholder="Начальная дата" style="max-width: 150px;">
                            <input type="date" id="endDateInput" class="filter-input form-control" placeholder="Конечная дата" style="max-width: 150px;">
                            <button type="button" id="searchButton" class="filter-button">Поиск</button>
                        </div>
                    </p>
                    <table class="table operation-table">
                        <thead>
                            <tr>
                                <th>Дата</th>
                                <th>Сумма</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Здесь будут операции из базы данных -->
                        </tbody>
                    </table>
                </div>
            </div>
        </form>
    </section>


    <footer class="footer footer-index bg-purple text-white">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-4">
                    <div class="footer-index-container-logo">
                        <img src="~/sourse/index_img/logos.png" alt="Логотип сайта">
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="footer-links">
                        <a class="links-footer-index-text" asp-controller="Home" asp-action="AboutProjectExecutor">О проекте</a>
                        <a class="links-footer-index-text" asp-controller="Home" asp-action="SupportServiceExecuter">Служба поддержки</a>
                    </div>
                </div>
                <div class="col-md-4">
                    <p class="footer-index-text">© MINIGIGS 2024. Сайт может содержать материалы для лиц старше 18 лет</p>
                </div>
            </div>
        </div>
    </footer>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var linkToCabinet = document.querySelector('.user-cabinet-link');

            linkToCabinet.addEventListener('click', function (e) {
                e.preventDefault(); // Предотвращаем стандартный переход по ссылке
                var userRole = localStorage.getItem('userRole');

                if (userRole === '1') {
                    window.location.href = '/Home/CustomerOffice';
                } else if (userRole === '2') {
                    window.location.href = '/Home/ExecutorOffice';
                } else {
                    // Если роль не определена, можно перенаправить на страницу входа или показать сообщение
                    alert('Пожалуйста, выполните вход.');
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Находим элемент для отображения баланса
            var balanceInfo = document.querySelector('.balance-info');

            // Определяем ID пользователя
            var userId = localStorage.getItem('userId');

            // Формируем URL для запроса на сервер
            var url = 'http://172.20.10.2:5089/api/Users/' + userId;

            // Отправляем запрос на сервер для получения данных о пользователе
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url);
            xhr.onload = function () {
                if (xhr.status === 200) {
                    // Парсим полученные данные в формат JSON
                    var userData = JSON.parse(xhr.responseText);

                    // Обновляем информацию о балансе на странице
                    balanceInfo.textContent = 'Баланс: ' + userData.amount + ' руб';
                } else {
                    // Обработка ошибок
                    console.error('Ошибка при получении данных о пользователе:', xhr.statusText);
                }
            };
            xhr.send();
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Подправим здесь, добавив Event в параметры функции
            var searchButton = document.getElementById('searchButton');

            searchButton.addEventListener('click', function (event) {
                event.preventDefault(); // Это предотвратит стандартное действие формы (перезагрузка страницы)

                var startDate = document.getElementById('startDateInput').value;
                var endDate = document.getElementById('endDateInput').value;

                var userId = localStorage.getItem('userId');
                var url = `http://172.20.10.2:5089/api/HistoryPaymentExecuters/ByHistoryPaymentExecuter/${userId}?startDate=${startDate}&endDate=${endDate}`;

                fetch(url)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Ошибка при получении данных');
                        }
                        return response.json();
                    })
                    .then(data => {
                        var tbody = document.querySelector('.operation-table tbody');
                        tbody.innerHTML = '';

                        if (data.length === 0) {
                            // Если данные пусты, можно добавить строку, указывающую на отсутствие данных
                            var emptyRow = document.createElement('tr');
                            emptyRow.innerHTML = `<td colspan="3">Нет данных за указанный период</td>`;
                            tbody.appendChild(emptyRow);
                            return;
                        }

                        data.forEach(payment => {
                            var row = document.createElement('tr');
                            // Форматируем dateTime, если необходимо
                            var paymentDate = new Date(payment.dateTime).toLocaleDateString(); // Пример простой локализации даты
                            row.innerHTML = `
                                        <td>${paymentDate}</td>
                                        <td>${payment.totalCost} руб</td>
                                    `;
                            tbody.appendChild(row);
                        });
                    })
                    .catch(error => {
                        console.error('Произошла ошибка:', error);
                    });
            });

            // Сразу же выполняем загрузку данных при загрузке страницы
            searchButton.click(); // Имитируем клик по кнопке "Поиск", чтобы загрузить все записи
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Получаем сохраненный ID пользователя
            var userId = localStorage.getItem('userId');

            fetch(`http://172.20.10.2:5089/api/Users/${userId}`, {
                method: 'GET',
                headers: {
                    'Accept': 'text/plain',
                    // Возможно, потребуется добавить токен авторизации в заголовки запроса
                    'Authorization': 'Bearer ' + localStorage.getItem('userToken')
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(userData => {
                    console.log(userData);
                    // Обновляем информацию на странице
                    document.getElementById('username').textContent = userData.name;
                    document.getElementById('usernames').textContent = userData.name;
                    // Если есть другие элементы для обновления, добавьте их здесь
                })
                .catch(error => console.error('Failed to fetch user data:', error));
        });

    </script>
<script src="~/js/userProfile.js"></script></body>